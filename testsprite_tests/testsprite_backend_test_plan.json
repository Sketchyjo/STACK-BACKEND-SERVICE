[
  {
    "id": "TC001",
    "title": "user registration with valid and invalid inputs",
    "description": "Test the user registration endpoint with valid email and password to ensure successful registration. Also test with missing or invalid fields to verify proper error handling and duplicate user registration attempts."
  },
  {
    "id": "TC002",
    "title": "user login with correct and incorrect credentials",
    "description": "Verify the user login endpoint accepts valid email and password combinations and returns a successful response with a token. Test invalid credentials to confirm the system returns unauthorized errors."
  },
  {
    "id": "TC003",
    "title": "start onboarding process with valid and invalid data",
    "description": "Test the onboarding start endpoint by submitting valid email and optional phone number to initiate onboarding. Validate error responses for missing required fields and duplicate user onboarding attempts."
  },
  {
    "id": "TC004",
    "title": "retrieve onboarding status with valid and invalid user ids",
    "description": "Verify the onboarding status endpoint returns correct onboarding, KYC, and wallet provisioning status for valid user IDs. Test invalid or non-existent user IDs to ensure proper error responses."
  },
  {
    "id": "TC005",
    "title": "submit kyc documents with complete and incomplete data",
    "description": "Test the KYC document submission endpoint with all required fields and valid document URLs to ensure acceptance. Validate error handling for missing required fields, invalid data, and unauthorized submissions."
  },
  {
    "id": "TC006",
    "title": "process kyc callback with valid and invalid payloads",
    "description": "Verify the KYC callback endpoint correctly processes valid callbacks from KYC providers and updates user status. Test invalid or malformed callbacks to confirm error handling."
  },
  {
    "id": "TC007",
    "title": "get wallet addresses filtered by blockchain chain",
    "description": "Test the wallet addresses endpoint to retrieve wallet addresses for the authenticated user. Validate filtering by supported blockchain networks and proper error handling for invalid requests."
  },
  {
    "id": "TC008",
    "title": "get wallet status with valid and invalid user context",
    "description": "Verify the wallet status endpoint returns comprehensive wallet provisioning and status information for authenticated users. Test error responses for invalid or unauthorized access."
  },
  {
    "id": "TC009",
    "title": "admin create wallets for user with valid and invalid inputs",
    "description": "Test the admin wallet creation endpoint to manually trigger wallet creation for a user with valid user ID and chain list. Validate permission checks and error handling for invalid requests."
  },
  {
    "id": "TC010",
    "title": "generate deposit address for supported blockchain chains",
    "description": "Test the deposit address generation endpoint by requesting deposit addresses for each supported blockchain chain. Verify correct address generation and error handling for invalid or unauthorized requests."
  }
]
